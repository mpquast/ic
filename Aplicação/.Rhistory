library("DT")
status=model.matrix(~status+replica, data = pd)
fit=lmFit(as.matrix(data), design=status)
cfit=eBayes(fit)
topP=topTable(cfit, coef = 2, number=Inf)
datatable(topP)
# Chunk 9: versao11
library(ggplot2)
ggplot(topP, aes(x=AveExpr, y=logFC, colour=adj.P.Val, size=adj.P.Val )) + geom_point()
ggplot(topP, aes(x=AveExpr, y=logFC, colour=adj.P.Val)) + geom_point()
# Chunk 10: versao12
ggplot(topP, aes(x=AveExpr, y=logFC, col=(topP$adj.P.Val<0.05))) + geom_point() + theme_bw()
# Chunk 11: versao2
ggplot(topP, aes(x=AveExpr, y=logFC, col=((abs(topP$logFC)>1)&(topP$adj.P.Val<0.05)))) + geom_point() + theme(legend.position="none")
# Chunk 12
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
grepl("reverse", tolower(rownames(data))
)
(grepl("reverse", tolower(rownames(data))))
x=rm((grepl("reverse", tolower(rownames(data)))))
x=rm(data[which((grepl("reverse", tolower(rownames(data))))))]
x=rm(data[which((grepl("reverse", tolower(rownames(data))))))])
x=rm(data[which((grepl("reverse", tolower(rownames(data)))))])
x=data[which((grepl("reverse", tolower(rownames(data)))))]
x=data[which((grepl("reverse", tolower(rownames(data))))),]
x=rm(data[which((grepl("reverse", tolower(rownames(data))))),])
x=data[which((grepl("reverse", tolower(rownames(data))))),]
View(x)
separate=function(data){
x=data[which((grepl("reverse", tolower(rownames(data))))),]
return(x)
}
rev = sapply(sep(data), '[', 1)
rev = sapply(separate(data), '[', 1)
rev
x=data[which((grepl("reverse", tolower(rownames(data))))),]
View(x)
separate=function(data){
x=data-data[which((grepl("reverse", tolower(rownames(data))))),]
return(x)
}
x=data-data[which((grepl("reverse", tolower(rownames(data))))),]
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") + theme_bw()
x=data[-which((grepl("reverse", tolower(rownames(data))))),]
View(x)
y=data[which((grepl("reverse", tolower(rownames(data))))),]
695+81
rm(x)
rm(y)
nms=rownames(srev)
srev=data[-which((grepl("reverse", tolower(rownames(data))))),]
rev=data[which((grepl("reverse", tolower(rownames(data))))),]
nms=rownames(srev)
prot = sapply(strsplit(nms, ";"), '[', 1)
rownames(srev)=prot
rm(prot, nms)
View(srev)
x=cor(srev[,1:10])
corrplot(x, method="ellipse")
rm(x)
pd_srev=data.frame(id=names(srev),
status=ifelse (grepl("^C", names(srev)), "controle", "caso"),
replica=ifelse (grepl("1$", names(srev)), "1", "2"))
library("limma")
library("DT")
status_srev=model.matrix(~status+replica, data = pd_srev)
fit2=lmFit(as.matrix(data), design=status_srev)
cfit2=eBayes(fit2)
topP2=topTable(cfit2, coef = 2, number=Inf)
datatable(topP2)
#dados sem reverse
srev=data[-which((grepl("reverse", tolower(rownames(data))))),]
#dados com reverse
rev=data[which((grepl("reverse", tolower(rownames(data))))),]
nms=rownames(srev)
prot = sapply(strsplit(nms, ";"), '[', 1)
rownames(srev)=prot
rm(prot, nms)
pd_srev=data.frame(id=names(srev),
status=ifelse (grepl("^C", names(srev)), "controle", "caso"),
replica=ifelse (grepl("1$", names(srev)), "1", "2"))
nms=rownames(srev)
prot = sapply(strsplit(nms, ";"), '[', 1)
rownames(srev)=prot
rm(prot, nms)
pd_srev=data.frame(id=names(srev),
status=ifelse (grepl("^C", names(srev)), "controle", "caso"),
replica=ifelse (grepl("1$", names(srev)), "1", "2"))
library("limma")
library("DT")
status_srev=model.matrix(~status+replica, data = pd_srev)
fit2=lmFit(as.matrix(srev), design=status_srev)
cfit2=eBayes(fit2)
topP2=topTable(cfit2, coef = 2, number=Inf)
datatable(topP2)
library(ggplot2)
ggplot(topP2, aes(x=AveExpr, y=logFC, colour=adj.P.Val, size=adj.P.Val )) + geom_point()
ggplot(topP2, aes(x=AveExpr, y=logFC, colour=adj.P.Val)) + geom_point()
ggplot(topP2, aes(x=AveExpr, y=logFC, col=(topP$adj.P.Val<0.05))) + geom_point() + theme_bw()
ggplot(topP2, aes(x=AveExpr, y=logFC, col=(topP$adj.P.Val<0.05))) + geom_point() + theme_bw()
ggplot(topP, aes(x=AveExpr, y=logFC, col=((abs(topP$logFC)>1)&(topP$adj.P.Val<0.05)))) + geom_point() + theme(legend.position="none")
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
ggplot(topP2, aes(x=AveExpr, y=logFC, col=(topP$adj.P.Val<0.05))) + geom_point() + theme_bw()
ggplot(topP2, aes(x=AveExpr, y=logFC, col=(topP2$adj.P.Val<0.05))) + geom_point() + theme_bw()
ggplot(topP2, aes(x=AveExpr, y=logFC, col=((abs(topP2$logFC)>1)&(topP2$adj.P.Val<0.05)))) + geom_point() + theme(legend.position="none")
ggplot(topP2, aes(x=AveExpr, y=logFC, col=(topP2$adj.P.Val<0.05))) + geom_point() + theme_bw()
ggplot(topP2, aes(x=AveExpr, y=logFC, col=((abs(topP2$logFC)>1)&(topP2$adj.P.Val<0.05)))) + geom_point() + theme(legend.position="none")
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") + theme_bw()
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") #+ theme_bw()
par(mfrow=c(2,1))
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") #+ theme_bw()
par(mfrow=c(2,1))
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
par(mfrow=c(1,2))
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") #+ theme_bw()
par(mfrow=c(2,1))
ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") #+ theme_bw()
x=rep(1,5)
y=c(1:10)
par(mfrow=c(2,1))
plot(x)
plot(x)
plot(y)
install.packages("gridExtra")
require(gridExtra)
plot1=ggplot(topP, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP$logFC)>1)&((-10*log(topP$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none")
plot2=ggplot(topP2, aes(x=logFC, y=(-(10*log(adj.P.Val))), col=((abs(topP2$logFC)>1)&((-10*log(topP2$adj.P.Val))>-10*log(0.05))))) + geom_point() + geom_vline(xintercept = c(-1,1)) + geom_hline(yintercept = -10*log(0.05))  + ylab("-10*log(p-valor)") + theme(legend.position="none") #+ theme_bw()
grid.arrange(plot1, plot2, ncol=2)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2,4:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
tab=tab[,-2]
dados=apply(tab[,-1], 2, as.double)
row.names(dados)=tab[[1]]
nms=rownames(dados)
names = sapply(strsplit(nms, ";"), '[', 1)
rownames(nms)=names
rm(names, nms)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2,4:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
tab=tab[,-2]
dados=apply(tab[,-1], 2, as.double)
nms=rownames(dados)
names = sapply(strsplit(nms, ";"), '[', 1)
rownames(dados)=names
rm(names, nms)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
nms=rownames(dados)
names = sapply(strsplit(nms, ";"), '[', 1)
rownames(dados)=names
rm(names, nms)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
nms=dados[[1]]
nms=dados[,1]
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
View(dados)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
View(tabela)
nms=tbl[[1]]
head(nms)
dados=apply(tabela[,-1], 2, as.double)
View(dados)
View(tabela)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
dados=apply(tabela[,-1], 2, as.double)
nms=tbl[[1]]
names = sapply(strsplit(nms, ";"), '[', 1)
rownames(dados)=names
rm(names, nms)
View(dados)
rm(names, nms, tabela, tbl)
names = sapply(strsplit(nms, ";"), '[', 1)
nms=tbl[[1]]
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
nms=tbl[[1]]
names = sapply(strsplit(nms, ";"), '[', 1)
rownames(dados)=names
rm(nms, tabela, tbl)
data=data.frame(col.names=names)
head(data)
View(data)
data=data.frame()
View(data)
colnames(data)=names
colnames(data)=as.vector(names)
View(dados)
ind = colnames(dados)
data=data.frame(row.names = ind)
View(data)
?t
data=data.frame(t(dados),row.names = ind)
View(data)
teste=data.frame(t(dados))
View(teste)
data=data.frame(t(dados))
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
nms=tbl[[1]]
names = sapply(strsplit(nms, ";"), '[', 1)
ind = colnames(dados)
rownames(dados)=names
rm(nms, tabela, tbl)
data=data.frame(t(dados))
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2:11)]
#tab=tabela[which(tbl$`Unique peptides`>=5),]
#tab=tab[,-2]
dados=apply(tabela[,-1], 2, as.double)
names=tbl[[1]]
names = sapply(strsplit(names, ";"), '[', 1)
names=gsub("--", "-", names)
rownames(dados)=names
rm(names, tabela, tbl)
data=data.frame(t(dados))
View(data)
View(data)
View(dados)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tbl=tbl[,-c(2:11)]
dados=apply(tbl[,-1], 2, as.double)
nms=colnames(dados)
nms=gsub("--", "-", nms)
colnames(dados)=nms
View(tbl)
names=tbl[[1]]
names = sapply(strsplit(names, ";"), '[', 1)
names=gsub("--", "-", names)
rownames(dados)=names
rm(names, tabela, tbl)
rm(names, nms, tbl)
data=data.frame(t(dados))
View(data)
View(dados)
View(dados)
View(data)
data=data.frame(t(dados))
rm(dados)
View(data)
shiny::runApp()
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
runApp()
shiny::runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
?tableOutput
runApp()
library(readxl)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tbl=tbl[,-c(2:11)]
dados=apply(tbl[,-1], 2, as.double)
nms=colnames(dados)
nms=gsub("--", "-", nms)
colnames(dados)=nms
names=tbl[[1]]
names = sapply(strsplit(names, ";"), '[', 1)
names=gsub("--", "-", names)
rownames(dados)=names
rm(names, nms, tbl)
data=data.frame(t(dados))
rm(dados)
View(data)
nms=rownames(data)
dados$amostras = sapply(strsplit(nms, "-"), '[', 1)
nms=rownames(data)
data$amostras = sapply(strsplit(nms, "-"), '[', 1)
data$replicas = sapply(strsplit(nms, "-"), '[', 2)
View(data)
head(nms)
head(data$amostras)
grepl(amostras, names(data))
grep("amostras", names(data))
data=data.frame(t(dados))
rm(dados)
nms=rownames(data)
data$amostras = sapply(strsplit(nms, "-"), '[', 1)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tbl=tbl[,-c(2:11)]
dados=apply(tbl[,-1], 2, as.double)
nms=colnames(dados)
nms=gsub("--", "-", nms)
colnames(dados)=nms
names=tbl[[1]]
names = sapply(strsplit(names, ";"), '[', 1)
names=gsub("--", "-", names)
rownames(dados)=names
rm(names, nms, tbl)
data=data.frame(t(dados))
rm(dados)
nms=rownames(data)
data$amostras = sapply(strsplit(nms, "-"), '[', 1)
View(data)
install.packages("plyr")
library(plyr)
temp=ddply(data, .(amostras), function(mdf) {
idx=grep("amostras", names(mdf))
colMeans(mdf[,-idx])
})
View(temp)
rm(data)
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tbl=tbl[,-c(2:11)]
dados=apply(tbl[,-1], 2, as.double)
nms=colnames(dados)
nms=gsub("--", "-", nms)
colnames(dados)=nms
names=tbl[[1]]
names = sapply(strsplit(names, ";"), '[', 1)
names=gsub("--", "-", names)
rownames(dados)=names
rm(names, nms, tbl)
data=data.frame(t(dados))
rm(dados)
rm(temp)
nms=rownames(data)
data$amostras = sapply(strsplit(nms, "-"), '[', 1)
library(plyr)
data=ddply(data, .(amostras), function(mdf) {
idx=grep("amostras", names(mdf))
colMeans(mdf[,-idx])
})
rownames(data)=data[[1]]
data=data[,-1]
View(data)
shiny::runApp()
runApp()
shiny::runApp()
library(DT)
x=data.frame()
as.data.table(x)
install.packages(datatable)
library(data.table)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
runApp()
?paste0
x=c(0,1,2,3)
y=c(3,2,1,0)
paste(x,y)
paste(x,y)[1]
str(paste(x,y)[1])
str(paste0(x,y)[1])
as.numeric(paste0(x,y)[1])
library(readxl)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2,4:11)]
tab=tabela[which(tbl$`Unique peptides`>=5),]
tab=tab[,-2]
dados=apply(tab[,-1], 2, as.double)
row.names(dados)=tab[[1]]
rm(tab, tbl, tabela)
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
tabela=tbl[,-c(2,4:11)]
tbl=read_excel("20160718_BPDunifesp_proteinsmeasurements_nofilter.xlsx", skip=2)
View(tbl)
View(tbl)
runApp()
runApp()
dados=apply(tab[,-1], 2, as.double)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
1360+150
source('~/Documentos/Github/ic/Aplicação/helpers.R')
range(c(45668:54813))
load("/home/yasmine/Documentos/Github/ic/Aplicação/data/filedata.RData")
range(548,541,562632,48451,6895,-484)
x=range(548,541,562632,48451,6895,-484)
x[1]
x[2]
-485<x[1]<1
source('~/Documentos/Github/ic/Aplicação/helpers.R')
x
x=c(548,541,562632,48451,6895,-484)
uniqp=c(0,600)
contp=c(-500,0)
contp=c(-500,600)
y=x[which((uniqp[1]<x)&&(x<uniqp[2])&&
(contp[1]<x)&&(x<contp[2])),]
source('~/Documentos/Github/ic/Aplicação/helpers.R')
shiny::runApp()
runApp()
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
source('~/Documentos/Github/ic/Aplicação/helpers.R')
source('~/Documentos/Github/ic/Aplicação/helpers.R')
source('~/Documentos/Github/ic/Aplicação/helpers.R')
x=loadData("20160718_BPDunifesp_proteinsmeasurements_nofilter")
View(x)
rm(x)
x=loadData("20160718_BPDunifesp_proteinsmeasurements_nofilter")
source('~/Documentos/Github/ic/Aplicação/helpers.R')
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
&&(dados$`Peptide count`>contp[1])&&(dados$`Peptide count`<contp[2])),]
source('~/Documentos/Github/ic/Aplicação/helpers.R')
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
dev.off()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
runApp()
View(x)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
runApp()
uniqp=c(1,1209)
contp=c(0,374)
y=filtro(x,uniqp,contp)
?filter
source('~/Documentos/Github/ic/Aplicação/helpers.R')
y=filtro(x,uniqp,contp)
uniqp[1]
View(x)
head(x$`Unique peptides`)
head(x$`Unique peptides`)>=uniqp[1]
dados=x[which(x$`Unique peptides`>=uniqp[1]),]
dados=x[which((x$`Unique peptides`>=uniqp[1])&&(x$`Unique peptides`<=uniqp[2]))),]
dados=x[which((x$`Unique peptides`>=uniqp[1])&&(x$`Unique peptides`<=uniqp[2])),]
View(dados)
uniqp[2]
dados=x[which((x$`Unique peptides`>=uniqp[1])&&(x$`Unique peptides`>=uniqp[2])),]
dados=x[which((x$`Unique peptides`>=uniqp[1])&&(x$`Unique peptides`<=uniqp[2])),]
dados=x[which((x$`Unique peptides`>=uniqp[1])&&(x$`Unique peptides`<uniqp[2])),]
dados=x[which((x$`Unique peptides`>=uniqp[1])&(x$`Unique peptides`<=uniqp[2])),]
source('~/Documentos/Github/ic/Aplicação/helpers.R')
rm(contp,uniqp,y,dados)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
runApp()
runApp()
runApp()
runApp()
filtro(x,c(1,1209),c(0,374))
n=filtro(x,c(1,1209),c(0,374))
plotDensity(n)
View(n)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
n=filtro(x,c(1,1209),c(0,374))
plotDensity(n)
plotCorr(n,1,10)
source('~/Documentos/Github/ic/Aplicação/helpers.R')
View(n)
nms=colnames(n)%>%gsub("--", "-", nms)
colnames(n)%>%gsub("--", "-", colnames(n))
colnames(n)=gsub("--", "-", colnames(n))
source('~/Documentos/Github/ic/Aplicação/helpers.R')
View(n)
View(x)
z=testeHip(n)
z
source('~/Documentos/Github/ic/Aplicação/helpers.R')
rm(z,n)
runApp()
